// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageUtil.proto

#ifndef PROTOBUF_MessageUtil_2eproto__INCLUDED
#define PROTOBUF_MessageUtil_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class MessageBox;
class MessageBoxDefaultTypeInternal;
extern MessageBoxDefaultTypeInternal _MessageBox_default_instance_;

namespace protobuf_MessageUtil_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_MessageUtil_2eproto

// ===================================================================

class MessageBox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBox) */ {
 public:
  MessageBox();
  virtual ~MessageBox();

  MessageBox(const MessageBox& from);

  inline MessageBox& operator=(const MessageBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageBox& default_instance();

  static inline const MessageBox* internal_default_instance() {
    return reinterpret_cast<const MessageBox*>(
               &_MessageBox_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MessageBox* other);

  // implements Message ----------------------------------------------

  inline MessageBox* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageBox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageBox& from);
  void MergeFrom(const MessageBox& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageBox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string trans_str = 2;
  int trans_str_size() const;
  void clear_trans_str();
  static const int kTransStrFieldNumber = 2;
  const ::std::string& trans_str(int index) const;
  ::std::string* mutable_trans_str(int index);
  void set_trans_str(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_trans_str(int index, ::std::string&& value);
  #endif
  void set_trans_str(int index, const char* value);
  void set_trans_str(int index, const char* value, size_t size);
  ::std::string* add_trans_str();
  void add_trans_str(const ::std::string& value);
  #if LANG_CXX11
  void add_trans_str(::std::string&& value);
  #endif
  void add_trans_str(const char* value);
  void add_trans_str(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& trans_str() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_trans_str();

  // repeated double trans_photo = 3;
  int trans_photo_size() const;
  void clear_trans_photo();
  static const int kTransPhotoFieldNumber = 3;
  double trans_photo(int index) const;
  void set_trans_photo(int index, double value);
  void add_trans_photo(double value);
  const ::google::protobuf::RepeatedField< double >&
      trans_photo() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_trans_photo();

  // required int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MessageBox)
 private:
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> trans_str_;
  ::google::protobuf::RepeatedField< double > trans_photo_;
  ::google::protobuf::int32 type_;
  friend struct protobuf_MessageUtil_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageBox

// required int32 type = 1;
inline bool MessageBox::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageBox::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageBox::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageBox::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MessageBox::type() const {
  // @@protoc_insertion_point(field_get:MessageBox.type)
  return type_;
}
inline void MessageBox::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MessageBox.type)
}

// repeated string trans_str = 2;
inline int MessageBox::trans_str_size() const {
  return trans_str_.size();
}
inline void MessageBox::clear_trans_str() {
  trans_str_.Clear();
}
inline const ::std::string& MessageBox::trans_str(int index) const {
  // @@protoc_insertion_point(field_get:MessageBox.trans_str)
  return trans_str_.Get(index);
}
inline ::std::string* MessageBox::mutable_trans_str(int index) {
  // @@protoc_insertion_point(field_mutable:MessageBox.trans_str)
  return trans_str_.Mutable(index);
}
inline void MessageBox::set_trans_str(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MessageBox.trans_str)
  trans_str_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MessageBox::set_trans_str(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:MessageBox.trans_str)
  trans_str_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MessageBox::set_trans_str(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  trans_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MessageBox.trans_str)
}
inline void MessageBox::set_trans_str(int index, const char* value, size_t size) {
  trans_str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessageBox.trans_str)
}
inline ::std::string* MessageBox::add_trans_str() {
  // @@protoc_insertion_point(field_add_mutable:MessageBox.trans_str)
  return trans_str_.Add();
}
inline void MessageBox::add_trans_str(const ::std::string& value) {
  trans_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MessageBox.trans_str)
}
#if LANG_CXX11
inline void MessageBox::add_trans_str(::std::string&& value) {
  trans_str_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:MessageBox.trans_str)
}
#endif
inline void MessageBox::add_trans_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  trans_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MessageBox.trans_str)
}
inline void MessageBox::add_trans_str(const char* value, size_t size) {
  trans_str_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MessageBox.trans_str)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageBox::trans_str() const {
  // @@protoc_insertion_point(field_list:MessageBox.trans_str)
  return trans_str_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MessageBox::mutable_trans_str() {
  // @@protoc_insertion_point(field_mutable_list:MessageBox.trans_str)
  return &trans_str_;
}

// repeated double trans_photo = 3;
inline int MessageBox::trans_photo_size() const {
  return trans_photo_.size();
}
inline void MessageBox::clear_trans_photo() {
  trans_photo_.Clear();
}
inline double MessageBox::trans_photo(int index) const {
  // @@protoc_insertion_point(field_get:MessageBox.trans_photo)
  return trans_photo_.Get(index);
}
inline void MessageBox::set_trans_photo(int index, double value) {
  trans_photo_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageBox.trans_photo)
}
inline void MessageBox::add_trans_photo(double value) {
  trans_photo_.Add(value);
  // @@protoc_insertion_point(field_add:MessageBox.trans_photo)
}
inline const ::google::protobuf::RepeatedField< double >&
MessageBox::trans_photo() const {
  // @@protoc_insertion_point(field_list:MessageBox.trans_photo)
  return trans_photo_;
}
inline ::google::protobuf::RepeatedField< double >*
MessageBox::mutable_trans_photo() {
  // @@protoc_insertion_point(field_mutable_list:MessageBox.trans_photo)
  return &trans_photo_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageUtil_2eproto__INCLUDED
