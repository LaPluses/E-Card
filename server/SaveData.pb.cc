// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SaveData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SaveData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class CardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Card> {
} _Card_default_instance_;
class DataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Data> {
} _Data_default_instance_;
class SaveDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SaveData> {
} _SaveData_default_instance_;

namespace protobuf_SaveData_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, cardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, carddata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, cardindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Card, checkflag_),
  1,
  0,
  ~0u,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, photo_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, cardinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, id_),
  0,
  1,
  ~0u,
  2,
  3,
  4,
  ~0u,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveData, vector_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(Card)},
  { 15, 28, sizeof(Data)},
  { 36, 42, sizeof(SaveData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Card_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SaveData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SaveData.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Card_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Data_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SaveData_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Card_default_instance_.DefaultConstruct();
  _Data_default_instance_.DefaultConstruct();
  _SaveData_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016SaveData.proto\"\301\001\n\004Card\022\016\n\006CardID\030\001 \001("
      "\005\022\020\n\010CardData\030\002 \001(\014\022\016\n\006fields\030\003 \003(\t\022\021\n\tC"
      "ardIndex\030\004 \001(\005\022\021\n\tcheckflag\030\005 \001(\005\"a\n\010Car"
      "dType\022\n\n\006IDCard\020\001\022\016\n\nDriverCard\020\002\022\017\n\013Stu"
      "dentCard\020\003\022\026\n\022SocialSecurityCard\020\004\022\020\n\014Di"
      "sabledCard\020\005\"\225\001\n\004Data\022\017\n\007account\030\001 \002(\t\022\020"
      "\n\010password\030\002 \002(\t\022\022\n\nphoto_info\030\003 \003(\001\022\024\n\014"
      "phone_number\030\004 \001(\t\022\r\n\005email\030\005 \001(\t\022\014\n\004Nam"
      "e\030\006 \001(\t\022\027\n\010CardInfo\030\007 \003(\0132\005.Card\022\n\n\002id\030\010"
      " \001(\t\"!\n\010SaveData\022\025\n\006vector\030\001 \003(\0132\005.Data"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 399);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SaveData.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_SaveData_2eproto

const ::google::protobuf::EnumDescriptor* Card_CardType_descriptor() {
  protobuf_SaveData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SaveData_2eproto::file_level_enum_descriptors[0];
}
bool Card_CardType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Card_CardType Card::IDCard;
const Card_CardType Card::DriverCard;
const Card_CardType Card::StudentCard;
const Card_CardType Card::SocialSecurityCard;
const Card_CardType Card::DisabledCard;
const Card_CardType Card::CardType_MIN;
const Card_CardType Card::CardType_MAX;
const int Card::CardType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Card::kCardIDFieldNumber;
const int Card::kCardDataFieldNumber;
const int Card::kFieldsFieldNumber;
const int Card::kCardIndexFieldNumber;
const int Card::kCheckflagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Card::Card()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SaveData_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Card)
}
Card::Card(const Card& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  carddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_carddata()) {
    carddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.carddata_);
  }
  ::memcpy(&cardid_, &from.cardid_,
    reinterpret_cast<char*>(&checkflag_) -
    reinterpret_cast<char*>(&cardid_) + sizeof(checkflag_));
  // @@protoc_insertion_point(copy_constructor:Card)
}

void Card::SharedCtor() {
  _cached_size_ = 0;
  carddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cardid_, 0, reinterpret_cast<char*>(&checkflag_) -
    reinterpret_cast<char*>(&cardid_) + sizeof(checkflag_));
}

Card::~Card() {
  // @@protoc_insertion_point(destructor:Card)
  SharedDtor();
}

void Card::SharedDtor() {
  carddata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Card::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Card::descriptor() {
  protobuf_SaveData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SaveData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Card& Card::default_instance() {
  protobuf_SaveData_2eproto::InitDefaults();
  return *internal_default_instance();
}

Card* Card::New(::google::protobuf::Arena* arena) const {
  Card* n = new Card;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Card::Clear() {
// @@protoc_insertion_point(message_clear_start:Card)
  fields_.Clear();
  if (has_carddata()) {
    GOOGLE_DCHECK(!carddata_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*carddata_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&cardid_, 0, reinterpret_cast<char*>(&checkflag_) -
      reinterpret_cast<char*>(&cardid_) + sizeof(checkflag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Card)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 CardID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_cardid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes CardData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_carddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string fields = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fields()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fields(this->fields_size() - 1).data(),
            this->fields(this->fields_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Card.fields");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 CardIndex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_cardindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cardindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 checkflag = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_checkflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checkflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Card)
  return false;
#undef DO_
}

void Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 CardID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cardid(), output);
  }

  // optional bytes CardData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->carddata(), output);
  }

  // repeated string fields = 3;
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fields(i).data(), this->fields(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Card.fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->fields(i), output);
  }

  // optional int32 CardIndex = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cardindex(), output);
  }

  // optional int32 checkflag = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->checkflag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Card)
}

::google::protobuf::uint8* Card::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 CardID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cardid(), target);
  }

  // optional bytes CardData = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->carddata(), target);
  }

  // repeated string fields = 3;
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fields(i).data(), this->fields(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Card.fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->fields(i), target);
  }

  // optional int32 CardIndex = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cardindex(), target);
  }

  // optional int32 checkflag = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->checkflag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Card)
  return target;
}

size_t Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Card)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string fields = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fields_size());
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fields(i));
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes CardData = 2;
    if (has_carddata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->carddata());
    }

    // optional int32 CardID = 1;
    if (has_cardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cardid());
    }

    // optional int32 CardIndex = 4;
    if (has_cardindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cardindex());
    }

    // optional int32 checkflag = 5;
    if (has_checkflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checkflag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Card::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Card)
  GOOGLE_DCHECK_NE(&from, this);
  const Card* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Card>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Card)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Card)
    MergeFrom(*source);
  }
}

void Card::MergeFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_carddata();
      carddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.carddata_);
    }
    if (cached_has_bits & 0x00000002u) {
      cardid_ = from.cardid_;
    }
    if (cached_has_bits & 0x00000004u) {
      cardindex_ = from.cardindex_;
    }
    if (cached_has_bits & 0x00000008u) {
      checkflag_ = from.checkflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Card::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Card::CopyFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Card::IsInitialized() const {
  return true;
}

void Card::Swap(Card* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Card::InternalSwap(Card* other) {
  fields_.InternalSwap(&other->fields_);
  carddata_.Swap(&other->carddata_);
  std::swap(cardid_, other->cardid_);
  std::swap(cardindex_, other->cardindex_);
  std::swap(checkflag_, other->checkflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Card::GetMetadata() const {
  protobuf_SaveData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SaveData_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Card

// optional int32 CardID = 1;
bool Card::has_cardid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Card::set_has_cardid() {
  _has_bits_[0] |= 0x00000002u;
}
void Card::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Card::clear_cardid() {
  cardid_ = 0;
  clear_has_cardid();
}
::google::protobuf::int32 Card::cardid() const {
  // @@protoc_insertion_point(field_get:Card.CardID)
  return cardid_;
}
void Card::set_cardid(::google::protobuf::int32 value) {
  set_has_cardid();
  cardid_ = value;
  // @@protoc_insertion_point(field_set:Card.CardID)
}

// optional bytes CardData = 2;
bool Card::has_carddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Card::set_has_carddata() {
  _has_bits_[0] |= 0x00000001u;
}
void Card::clear_has_carddata() {
  _has_bits_[0] &= ~0x00000001u;
}
void Card::clear_carddata() {
  carddata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_carddata();
}
const ::std::string& Card::carddata() const {
  // @@protoc_insertion_point(field_get:Card.CardData)
  return carddata_.GetNoArena();
}
void Card::set_carddata(const ::std::string& value) {
  set_has_carddata();
  carddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Card.CardData)
}
#if LANG_CXX11
void Card::set_carddata(::std::string&& value) {
  set_has_carddata();
  carddata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Card.CardData)
}
#endif
void Card::set_carddata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_carddata();
  carddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Card.CardData)
}
void Card::set_carddata(const void* value, size_t size) {
  set_has_carddata();
  carddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Card.CardData)
}
::std::string* Card::mutable_carddata() {
  set_has_carddata();
  // @@protoc_insertion_point(field_mutable:Card.CardData)
  return carddata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Card::release_carddata() {
  // @@protoc_insertion_point(field_release:Card.CardData)
  clear_has_carddata();
  return carddata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Card::set_allocated_carddata(::std::string* carddata) {
  if (carddata != NULL) {
    set_has_carddata();
  } else {
    clear_has_carddata();
  }
  carddata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), carddata);
  // @@protoc_insertion_point(field_set_allocated:Card.CardData)
}

// repeated string fields = 3;
int Card::fields_size() const {
  return fields_.size();
}
void Card::clear_fields() {
  fields_.Clear();
}
const ::std::string& Card::fields(int index) const {
  // @@protoc_insertion_point(field_get:Card.fields)
  return fields_.Get(index);
}
::std::string* Card::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:Card.fields)
  return fields_.Mutable(index);
}
void Card::set_fields(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Card.fields)
  fields_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Card::set_fields(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Card.fields)
  fields_.Mutable(index)->assign(std::move(value));
}
#endif
void Card::set_fields(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  fields_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Card.fields)
}
void Card::set_fields(int index, const char* value, size_t size) {
  fields_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Card.fields)
}
::std::string* Card::add_fields() {
  // @@protoc_insertion_point(field_add_mutable:Card.fields)
  return fields_.Add();
}
void Card::add_fields(const ::std::string& value) {
  fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Card.fields)
}
#if LANG_CXX11
void Card::add_fields(::std::string&& value) {
  fields_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Card.fields)
}
#endif
void Card::add_fields(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Card.fields)
}
void Card::add_fields(const char* value, size_t size) {
  fields_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Card.fields)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Card::fields() const {
  // @@protoc_insertion_point(field_list:Card.fields)
  return fields_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Card::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:Card.fields)
  return &fields_;
}

// optional int32 CardIndex = 4;
bool Card::has_cardindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Card::set_has_cardindex() {
  _has_bits_[0] |= 0x00000004u;
}
void Card::clear_has_cardindex() {
  _has_bits_[0] &= ~0x00000004u;
}
void Card::clear_cardindex() {
  cardindex_ = 0;
  clear_has_cardindex();
}
::google::protobuf::int32 Card::cardindex() const {
  // @@protoc_insertion_point(field_get:Card.CardIndex)
  return cardindex_;
}
void Card::set_cardindex(::google::protobuf::int32 value) {
  set_has_cardindex();
  cardindex_ = value;
  // @@protoc_insertion_point(field_set:Card.CardIndex)
}

// optional int32 checkflag = 5;
bool Card::has_checkflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Card::set_has_checkflag() {
  _has_bits_[0] |= 0x00000008u;
}
void Card::clear_has_checkflag() {
  _has_bits_[0] &= ~0x00000008u;
}
void Card::clear_checkflag() {
  checkflag_ = 0;
  clear_has_checkflag();
}
::google::protobuf::int32 Card::checkflag() const {
  // @@protoc_insertion_point(field_get:Card.checkflag)
  return checkflag_;
}
void Card::set_checkflag(::google::protobuf::int32 value) {
  set_has_checkflag();
  checkflag_ = value;
  // @@protoc_insertion_point(field_set:Card.checkflag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kAccountFieldNumber;
const int Data::kPasswordFieldNumber;
const int Data::kPhotoInfoFieldNumber;
const int Data::kPhoneNumberFieldNumber;
const int Data::kEmailFieldNumber;
const int Data::kNameFieldNumber;
const int Data::kCardInfoFieldNumber;
const int Data::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SaveData_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Data)
}
Data::Data(const Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      photo_info_(from.photo_info_),
      cardinfo_(from.cardinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone_number()) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:Data)
}

void Data::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:Data)
  SharedDtor();
}

void Data::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  protobuf_SaveData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SaveData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Data& Data::default_instance() {
  protobuf_SaveData_2eproto::InitDefaults();
  return *internal_default_instance();
}

Data* Data::New(::google::protobuf::Arena* arena) const {
  Data* n = new Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:Data)
  photo_info_.Clear();
  cardinfo_.Clear();
  if (_has_bits_[0 / 32] & 63u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_phone_number()) {
      GOOGLE_DCHECK(!phone_number_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_number_.UnsafeRawStringPointer())->clear();
    }
    if (has_email()) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_id()) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Data.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Data.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double photo_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25u, input, this->mutable_photo_info())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_photo_info())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone_number = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone_number().data(), this->phone_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Data.phone_number");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Data.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Data.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Card CardInfo = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cardinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Data.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // repeated double photo_info = 3;
  for (int i = 0, n = this->photo_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->photo_info(i), output);
  }

  // optional string phone_number = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone_number().data(), this->phone_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.phone_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone_number(), output);
  }

  // optional string email = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->email(), output);
  }

  // optional string Name = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // repeated .Card CardInfo = 7;
  for (unsigned int i = 0, n = this->cardinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->cardinfo(i), output);
  }

  // optional string id = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // repeated double photo_info = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(3, this->photo_info_, target);

  // optional string phone_number = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone_number().data(), this->phone_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.phone_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->phone_number(), target);
  }

  // optional string email = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->email(), target);
  }

  // optional string Name = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // repeated .Card CardInfo = 7;
  for (unsigned int i = 0, n = this->cardinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->cardinfo(i), deterministic, target);
  }

  // optional string id = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Data.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Data)
  return target;
}

size_t Data::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Data)
  size_t total_size = 0;

  if (has_account()) {
    // required string account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated double photo_info = 3;
  {
    unsigned int count = this->photo_info_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->photo_info_size());
    total_size += data_size;
  }

  // repeated .Card CardInfo = 7;
  {
    unsigned int count = this->cardinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cardinfo(i));
    }
  }

  if (_has_bits_[0 / 32] & 60u) {
    // optional string phone_number = 4;
    if (has_phone_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone_number());
    }

    // optional string email = 5;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string Name = 6;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string id = 8;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  photo_info_.MergeFrom(from.photo_info_);
  cardinfo_.MergeFrom(from.cardinfo_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_phone_number();
      phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
  }
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  photo_info_.InternalSwap(&other->photo_info_);
  cardinfo_.InternalSwap(&other->cardinfo_);
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  phone_number_.Swap(&other->phone_number_);
  email_.Swap(&other->email_);
  name_.Swap(&other->name_);
  id_.Swap(&other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_SaveData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SaveData_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Data

// required string account = 1;
bool Data::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Data::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void Data::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void Data::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& Data::account() const {
  // @@protoc_insertion_point(field_get:Data.account)
  return account_.GetNoArena();
}
void Data::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Data.account)
}
#if LANG_CXX11
void Data::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Data.account)
}
#endif
void Data::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Data.account)
}
void Data::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Data.account)
}
::std::string* Data::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:Data.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Data::release_account() {
  // @@protoc_insertion_point(field_release:Data.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Data::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:Data.account)
}

// required string password = 2;
bool Data::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Data::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void Data::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void Data::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& Data::password() const {
  // @@protoc_insertion_point(field_get:Data.password)
  return password_.GetNoArena();
}
void Data::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Data.password)
}
#if LANG_CXX11
void Data::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Data.password)
}
#endif
void Data::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Data.password)
}
void Data::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Data.password)
}
::std::string* Data::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:Data.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Data::release_password() {
  // @@protoc_insertion_point(field_release:Data.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Data::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Data.password)
}

// repeated double photo_info = 3;
int Data::photo_info_size() const {
  return photo_info_.size();
}
void Data::clear_photo_info() {
  photo_info_.Clear();
}
double Data::photo_info(int index) const {
  // @@protoc_insertion_point(field_get:Data.photo_info)
  return photo_info_.Get(index);
}
void Data::set_photo_info(int index, double value) {
  photo_info_.Set(index, value);
  // @@protoc_insertion_point(field_set:Data.photo_info)
}
void Data::add_photo_info(double value) {
  photo_info_.Add(value);
  // @@protoc_insertion_point(field_add:Data.photo_info)
}
const ::google::protobuf::RepeatedField< double >&
Data::photo_info() const {
  // @@protoc_insertion_point(field_list:Data.photo_info)
  return photo_info_;
}
::google::protobuf::RepeatedField< double >*
Data::mutable_photo_info() {
  // @@protoc_insertion_point(field_mutable_list:Data.photo_info)
  return &photo_info_;
}

// optional string phone_number = 4;
bool Data::has_phone_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Data::set_has_phone_number() {
  _has_bits_[0] |= 0x00000004u;
}
void Data::clear_has_phone_number() {
  _has_bits_[0] &= ~0x00000004u;
}
void Data::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_number();
}
const ::std::string& Data::phone_number() const {
  // @@protoc_insertion_point(field_get:Data.phone_number)
  return phone_number_.GetNoArena();
}
void Data::set_phone_number(const ::std::string& value) {
  set_has_phone_number();
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Data.phone_number)
}
#if LANG_CXX11
void Data::set_phone_number(::std::string&& value) {
  set_has_phone_number();
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Data.phone_number)
}
#endif
void Data::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_number();
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Data.phone_number)
}
void Data::set_phone_number(const char* value, size_t size) {
  set_has_phone_number();
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Data.phone_number)
}
::std::string* Data::mutable_phone_number() {
  set_has_phone_number();
  // @@protoc_insertion_point(field_mutable:Data.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Data::release_phone_number() {
  // @@protoc_insertion_point(field_release:Data.phone_number)
  clear_has_phone_number();
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Data::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    set_has_phone_number();
  } else {
    clear_has_phone_number();
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:Data.phone_number)
}

// optional string email = 5;
bool Data::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Data::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
void Data::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
void Data::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& Data::email() const {
  // @@protoc_insertion_point(field_get:Data.email)
  return email_.GetNoArena();
}
void Data::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Data.email)
}
#if LANG_CXX11
void Data::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Data.email)
}
#endif
void Data::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Data.email)
}
void Data::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Data.email)
}
::std::string* Data::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:Data.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Data::release_email() {
  // @@protoc_insertion_point(field_release:Data.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Data::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:Data.email)
}

// optional string Name = 6;
bool Data::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Data::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
void Data::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void Data::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Data::name() const {
  // @@protoc_insertion_point(field_get:Data.Name)
  return name_.GetNoArena();
}
void Data::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Data.Name)
}
#if LANG_CXX11
void Data::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Data.Name)
}
#endif
void Data::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Data.Name)
}
void Data::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Data.Name)
}
::std::string* Data::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Data.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Data::release_name() {
  // @@protoc_insertion_point(field_release:Data.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Data::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Data.Name)
}

// repeated .Card CardInfo = 7;
int Data::cardinfo_size() const {
  return cardinfo_.size();
}
void Data::clear_cardinfo() {
  cardinfo_.Clear();
}
const ::Card& Data::cardinfo(int index) const {
  // @@protoc_insertion_point(field_get:Data.CardInfo)
  return cardinfo_.Get(index);
}
::Card* Data::mutable_cardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Data.CardInfo)
  return cardinfo_.Mutable(index);
}
::Card* Data::add_cardinfo() {
  // @@protoc_insertion_point(field_add:Data.CardInfo)
  return cardinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Card >*
Data::mutable_cardinfo() {
  // @@protoc_insertion_point(field_mutable_list:Data.CardInfo)
  return &cardinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Card >&
Data::cardinfo() const {
  // @@protoc_insertion_point(field_list:Data.CardInfo)
  return cardinfo_;
}

// optional string id = 8;
bool Data::has_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Data::set_has_id() {
  _has_bits_[0] |= 0x00000020u;
}
void Data::clear_has_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void Data::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& Data::id() const {
  // @@protoc_insertion_point(field_get:Data.id)
  return id_.GetNoArena();
}
void Data::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Data.id)
}
#if LANG_CXX11
void Data::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Data.id)
}
#endif
void Data::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Data.id)
}
void Data::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Data.id)
}
::std::string* Data::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:Data.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Data::release_id() {
  // @@protoc_insertion_point(field_release:Data.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Data::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Data.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveData::kVectorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveData::SaveData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SaveData_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SaveData)
}
SaveData::SaveData(const SaveData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      vector_(from.vector_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SaveData)
}

void SaveData::SharedCtor() {
  _cached_size_ = 0;
}

SaveData::~SaveData() {
  // @@protoc_insertion_point(destructor:SaveData)
  SharedDtor();
}

void SaveData::SharedDtor() {
}

void SaveData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveData::descriptor() {
  protobuf_SaveData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SaveData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SaveData& SaveData::default_instance() {
  protobuf_SaveData_2eproto::InitDefaults();
  return *internal_default_instance();
}

SaveData* SaveData::New(::google::protobuf::Arena* arena) const {
  SaveData* n = new SaveData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveData::Clear() {
// @@protoc_insertion_point(message_clear_start:SaveData)
  vector_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SaveData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SaveData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Data vector = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vector()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SaveData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SaveData)
  return false;
#undef DO_
}

void SaveData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SaveData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Data vector = 1;
  for (unsigned int i = 0, n = this->vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->vector(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SaveData)
}

::google::protobuf::uint8* SaveData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SaveData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Data vector = 1;
  for (unsigned int i = 0, n = this->vector_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->vector(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SaveData)
  return target;
}

size_t SaveData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SaveData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Data vector = 1;
  {
    unsigned int count = this->vector_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vector(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SaveData)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SaveData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SaveData)
    MergeFrom(*source);
  }
}

void SaveData::MergeFrom(const SaveData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SaveData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vector_.MergeFrom(from.vector_);
}

void SaveData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SaveData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveData::CopyFrom(const SaveData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SaveData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveData::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->vector())) return false;
  return true;
}

void SaveData::Swap(SaveData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveData::InternalSwap(SaveData* other) {
  vector_.InternalSwap(&other->vector_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveData::GetMetadata() const {
  protobuf_SaveData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SaveData_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveData

// repeated .Data vector = 1;
int SaveData::vector_size() const {
  return vector_.size();
}
void SaveData::clear_vector() {
  vector_.Clear();
}
const ::Data& SaveData::vector(int index) const {
  // @@protoc_insertion_point(field_get:SaveData.vector)
  return vector_.Get(index);
}
::Data* SaveData::mutable_vector(int index) {
  // @@protoc_insertion_point(field_mutable:SaveData.vector)
  return vector_.Mutable(index);
}
::Data* SaveData::add_vector() {
  // @@protoc_insertion_point(field_add:SaveData.vector)
  return vector_.Add();
}
::google::protobuf::RepeatedPtrField< ::Data >*
SaveData::mutable_vector() {
  // @@protoc_insertion_point(field_mutable_list:SaveData.vector)
  return &vector_;
}
const ::google::protobuf::RepeatedPtrField< ::Data >&
SaveData::vector() const {
  // @@protoc_insertion_point(field_list:SaveData.vector)
  return vector_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
